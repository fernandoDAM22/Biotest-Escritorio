/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista.administrador;

import java.awt.Color;
import java.awt.event.*;

import controlador.administrador.GestionCategorias;
import vista.acceso.VentanaLogin;
import vista.juego.VentanaSeleccionarModoJuego;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author fernando
 */
public class VentanaAdministrarCategorias extends javax.swing.JFrame {
    DefaultTableModel modelo;

    /**
     * Creates new form VentanaAdministrarCategorias
     */
    public VentanaAdministrarCategorias() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        panelPrinicipal = new javax.swing.JPanel();
        panelBotones = new javax.swing.JPanel();
        panelDatosCategoria = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreCategoria = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDescripcionCategoria = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        panelContenido = new javax.swing.JPanel();
        listaCategorias = new javax.swing.JComboBox<>();
        tablaPreguntas = new javax.swing.JScrollPane();
        tablaInformacionPreguntas = new javax.swing.JTable();
        jpanelInformacionPreguntas = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtEnunciado = new javax.swing.JTextField();
        txtRespuestaCorrecta = new javax.swing.JTextField();
        txtRespuestaIncorrecta1 = new javax.swing.JTextField();
        txtRespuestaIncorrecta2 = new javax.swing.JTextField();
        txtRespuestaIncorrecta3 = new javax.swing.JTextField();
        barraMenu = new javax.swing.JMenuBar();
        menuUsuario = new javax.swing.JMenu();
        opcionModoJuego = new javax.swing.JMenuItem();
        opcionCerrarSesion = new javax.swing.JMenuItem();
        menuAdministrador = new javax.swing.JMenu();
        opcionPreguntas = new javax.swing.JMenuItem();
        opcionCuestionarios = new javax.swing.JMenuItem();
        opcionCategorias = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrinicipal.setLayout(new java.awt.BorderLayout());

        panelBotones.setAutoscrolls(true);
        panelBotones.setPreferredSize(new java.awt.Dimension(200, 405));
        panelBotones.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 30));

        panelDatosCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la categoria"));
        panelDatosCategoria.setPreferredSize(new java.awt.Dimension(180, 250));

        jLabel1.setText("Nombre");

        jLabel12.setText("Descripcion");

        javax.swing.GroupLayout panelDatosCategoriaLayout = new javax.swing.GroupLayout(panelDatosCategoria);
        panelDatosCategoria.setLayout(panelDatosCategoriaLayout);
        panelDatosCategoriaLayout.setHorizontalGroup(
                panelDatosCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosCategoriaLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosCategoriaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtNombreCategoria)
                                .addContainerGap())
                        .addGroup(panelDatosCategoriaLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(47, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDatosCategoriaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtDescripcionCategoria)
                                .addContainerGap())
        );
        panelDatosCategoriaLayout.setVerticalGroup(
                panelDatosCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelDatosCategoriaLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(txtDescripcionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(83, Short.MAX_VALUE))
        );

        panelBotones.add(panelDatosCategoria);

        btnCrear.setBackground(new Color(29, 209, 161));
        btnCrear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCrear.setForeground(new java.awt.Color(0, 0, 0));
        btnCrear.setText("Crear");
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.setPreferredSize(new java.awt.Dimension(150, 50));
        btnCrear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                btnCrearActionListener(evt);
            }
        });
        panelBotones.add(btnCrear);

        btnBorrar.setBackground(new Color(238, 82, 83));
        btnBorrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBorrar.setForeground(new java.awt.Color(0, 0, 0));
        btnBorrar.setText("Borrar");
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.setPreferredSize(new java.awt.Dimension(150, 50));
        btnBorrar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                btnBorrarActionListener(evt);
            }
        });
        panelBotones.add(btnBorrar);

        btnModificar.setBackground(new Color(238, 82, 83));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 0, 0));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.setPreferredSize(new java.awt.Dimension(150, 50));
        btnModificar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                btnModificarActionListener(evt);
            }
        });
        panelBotones.add(btnModificar);

        panelPrinicipal.add(panelBotones, java.awt.BorderLayout.LINE_END);

        panelContenido.setLayout(new java.awt.BorderLayout(0, 25));

        listaCategorias.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        listaCategorias.setForeground(new java.awt.Color(0, 0, 0));
        listaCategorias.setPreferredSize(new java.awt.Dimension(200, 50));
        listaCategorias.setEditable(false);
        listaCategorias.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent evt) {
                listaCategoriasItemListener(evt);
            }
        });
        panelContenido.add(listaCategorias, java.awt.BorderLayout.PAGE_START);

        tablaInformacionPreguntas.setForeground(new java.awt.Color(255, 255, 255));
        tablaInformacionPreguntas.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String[]{
                        "Pregunta", "Respuesta Correcta", "Respuesta Incorrecta 1", "Respuesta Incorrecta 2", "Respuessta Incorrecta 3"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tablaInformacionPreguntas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colocarDatosPregunta();
            }
        });
        tablaInformacionPreguntas.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                super.keyReleased(e);
                colocarDatosPregunta();
            }
        });
        tablaPreguntas.setViewportView(tablaInformacionPreguntas);

        panelContenido.add(tablaPreguntas, java.awt.BorderLayout.CENTER);

        jpanelInformacionPreguntas.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de la pregunta"));
        jpanelInformacionPreguntas.setMaximumSize(new java.awt.Dimension(2147483647, 22));
        jpanelInformacionPreguntas.setPreferredSize(new java.awt.Dimension(861, 230));

        jLabel7.setText("Enunciado");

        jLabel8.setText("Respuesta Correcta");

        jLabel9.setText("Respuesta Incorrecta 1");

        jLabel10.setText("Respuesta Incorrecta 2");

        jLabel11.setText("Respuesta Incorrecta 3");

        txtEnunciado.setMaximumSize(new java.awt.Dimension(2147483647, 22));

        txtRespuestaCorrecta.setMaximumSize(new java.awt.Dimension(2147483647, 22));

        txtRespuestaIncorrecta1.setMaximumSize(new java.awt.Dimension(2147483647, 22));
        txtRespuestaIncorrecta1.setPreferredSize(new java.awt.Dimension(73, 26));

        txtRespuestaIncorrecta2.setMaximumSize(new java.awt.Dimension(2147483647, 22));
        txtRespuestaIncorrecta2.setPreferredSize(new java.awt.Dimension(73, 26));

        txtRespuestaIncorrecta3.setMaximumSize(new java.awt.Dimension(2147483647, 22));
        txtRespuestaIncorrecta3.setPreferredSize(new java.awt.Dimension(73, 26));

        javax.swing.GroupLayout jpanelInformacionPreguntasLayout = new javax.swing.GroupLayout(jpanelInformacionPreguntas);
        jpanelInformacionPreguntas.setLayout(jpanelInformacionPreguntasLayout);
        jpanelInformacionPreguntasLayout.setHorizontalGroup(
                jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpanelInformacionPreguntasLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jpanelInformacionPreguntasLayout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(23, 23, 23)
                                                .addComponent(txtRespuestaCorrecta, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelInformacionPreguntasLayout.createSequentialGroup()
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtRespuestaIncorrecta3, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jpanelInformacionPreguntasLayout.createSequentialGroup()
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtRespuestaIncorrecta2, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jpanelInformacionPreguntasLayout.createSequentialGroup()
                                                        .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jpanelInformacionPreguntasLayout.createSequentialGroup()
                                                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(66, 66, 66))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpanelInformacionPreguntasLayout.createSequentialGroup()
                                                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                        .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(txtEnunciado, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(txtRespuestaIncorrecta1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap(211, Short.MAX_VALUE))
        );
        jpanelInformacionPreguntasLayout.setVerticalGroup(
                jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpanelInformacionPreguntasLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(txtEnunciado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(txtRespuestaCorrecta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtRespuestaIncorrecta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtRespuestaIncorrecta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jpanelInformacionPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtRespuestaIncorrecta3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31))
        );

        panelContenido.add(jpanelInformacionPreguntas, java.awt.BorderLayout.PAGE_END);

        panelPrinicipal.add(panelContenido, java.awt.BorderLayout.CENTER);

        menuUsuario.setText("Usuario");

        opcionModoJuego.setText("Seleccionar Modo de juego");
        opcionModoJuego.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_E, ActionEvent.ALT_MASK));
        opcionModoJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionModoJuegoActionPerformed(evt);
            }
        });
        menuUsuario.add(opcionModoJuego);

        opcionCerrarSesion.setText("Cerrar Sesion");
        opcionCerrarSesion.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.ALT_MASK));
        opcionCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCerrarSesionActionPerformed(evt);
            }
        });
        menuUsuario.add(opcionCerrarSesion);

        barraMenu.add(menuUsuario);

        menuAdministrador.setText("Administrador");

        opcionPreguntas.setText("Preguntas");
        opcionPreguntas.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, ActionEvent.ALT_MASK));
        opcionPreguntas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionPreguntasActionPerformed(evt);
            }
        });
        menuAdministrador.add(opcionPreguntas);

        opcionCuestionarios.setText("Cuestionarios");
        opcionCuestionarios.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.ALT_MASK));
        opcionCuestionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCuestionariosActionPerformed(evt);
            }
        });
        menuAdministrador.add(opcionCuestionarios);

        opcionCategorias.setText("Categorias");
        opcionCategorias.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, ActionEvent.ALT_MASK));

        opcionCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionCategoriasActionPerformed(evt);
            }
        });
        menuAdministrador.add(opcionCategorias);

        barraMenu.add(menuAdministrador);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelPrinicipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelPrinicipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
        );
        cargarListaCategorias();
        modelo = GestionCategorias.colocarPreguntas(tablaInformacionPreguntas, listaCategorias.getSelectedItem().toString());

        pack();
    }// </editor-fold>

    private void btnModificarActionListener(ActionEvent evt) {
        if (txtNombreCategoria.getText().equals("") || txtNombreCategoria.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Rellene todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String nombreAntiguo = listaCategorias.getSelectedItem().toString();
        String nombre = txtNombreCategoria.getText();
        String descripcion = txtDescripcionCategoria.getText();
        if (GestionCategorias.existeCategoria(nombre) && !nombre.equals(listaCategorias.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(this, "Ya existe una categoria con ese nombre", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (GestionCategorias.modificarCategoria(nombreAntiguo, nombre, descripcion)) {
            JOptionPane.showMessageDialog(this, "Categoria Modificada Correctamente", "Correcto", JOptionPane.INFORMATION_MESSAGE);
            int posicion = listaCategorias.getSelectedIndex(); //obtenemos la posicion de la categoria seleccionada
            listaCategorias.removeAllItems(); //vaciamos la lista
            //la volvemos a llenar
            for (String e : GestionCategorias.obtenerCategorias()) {
                listaCategorias.addItem(e);
            }
            /*seleccionamos el elemento que se encuentra en la misma posicion que el que acabamos de modificar,
             de esta manera se vera reflejada la modificacion en la lista y el usuario no notara el cambio
            */
            listaCategorias.setSelectedIndex(posicion);
        } else {
            JOptionPane.showMessageDialog(this, "No se ha podido modificar la categoria", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void listaCategoriasItemListener(ItemEvent evt) {
        limpiarCajas();
        if (listaCategorias.getSelectedItem() != null) {
            modelo = GestionCategorias.colocarPreguntas(tablaInformacionPreguntas, listaCategorias.getSelectedItem().toString());
            txtNombreCategoria.setText(listaCategorias.getSelectedItem().toString());
            txtDescripcionCategoria.setText(GestionCategorias.obtenerDescripcion(listaCategorias.getSelectedItem().toString()));
            txtDescripcionCategoria.moveCaretPosition(0);
        }
    }

    /**
     * Este metodo nos permite limpiar las cajas de texto
     */
    private void limpiarCajas() {
        txtEnunciado.setText("");
        txtRespuestaCorrecta.setText("");
        txtRespuestaIncorrecta1.setText("");
        txtRespuestaIncorrecta2.setText("");
        txtRespuestaIncorrecta3.setText("");
    }

    private void btnBorrarActionListener(ActionEvent evt) {
        String nombre = listaCategorias.getSelectedItem().toString();
        //nos aseguramos de que el usuario quiere borrar la categoria
        if (JOptionPane.showConfirmDialog(null, "¿Estas seguro de que quieres borrar la categoria?", "¿Estas seguro?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) != 0) {
            return;
        }
        //intentamos borrar la categoria
        if (GestionCategorias.borrarCategoria(nombre)) {//si se borra
            JOptionPane.showMessageDialog(this, "Categoria borrada correctamente", "Categoria borrada", JOptionPane.INFORMATION_MESSAGE);
            //eliminamos la categoria borrada de la lista desplegable
            listaCategorias.removeItem(nombre);
        } else {
            StringBuilder cadena = new StringBuilder();
            cadena.append("No se ha podido borrar la categoria, las posibles causas son:\n");

            cadena.append("\t > Ha ocurrido un error en la conexion a la base de datos\n");
            cadena.append("\t > No se pueden borrar categorias que contengan almenos una pregunta\n");
            cadena.append("\t > Ha ocurrido un error en la conexion a la base de datos\n");
            JOptionPane.showMessageDialog(this, cadena.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Este metodo nos permite cargar la lista de categorias
     *
     * @author Fernando
     */
    public void cargarListaCategorias() {
        listaCategorias.removeAllItems();
        for (String e : GestionCategorias.obtenerCategorias()) {
            listaCategorias.addItem(e);
        }
    }

    private void btnCrearActionListener(ActionEvent evt) {
        if (txtNombreCategoria.getText().equals("") || txtNombreCategoria.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Rellene todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (GestionCategorias.existeCategoria(txtNombreCategoria.getText())) {
            JOptionPane.showMessageDialog(this, "Esa categoria ya existe", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (JOptionPane.showConfirmDialog(null, "¿Estas seguro de que quieres insertar la categoria?", "¿Estas seguro?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
            if (GestionCategorias.insertarCategoria(txtNombreCategoria.getText(), txtDescripcionCategoria.getText()) > 0) {
                JOptionPane.showMessageDialog(this, "Categoria insertada correctamente", "Correcto", JOptionPane.INFORMATION_MESSAGE);
                cargarListaCategorias();
            } else {
                JOptionPane.showMessageDialog(this, "Esa categoria ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void opcionModoJuegoActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaSeleccionarModoJuego ventana = new VentanaSeleccionarModoJuego();
        ventana.setVisible(true);
        dispose();
    }

    private void opcionPreguntasActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaAdministrarPreguntas ventana = new VentanaAdministrarPreguntas();
        ventana.setVisible(true);
        dispose();
    }

    private void opcionCuestionariosActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaAdministrarCuestionarios ventana = new VentanaAdministrarCuestionarios();
        ventana.setVisible(true);
        dispose();
    }

    private void opcionCategoriasActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaAdministrarCategorias ventana = new VentanaAdministrarCategorias();
        ventana.setVisible(true);
        dispose();
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        colocarDatosPregunta();
    }

    /**
     * Este metodo nos permite colocar los datos de una pregunta en sus casillas
     * correspondientes
     *
     * @author Fernando
     */
    private void colocarDatosPregunta() {
        //obtenemos la posicion de la fila que se ha pulsado
        int posicion = tablaInformacionPreguntas.getSelectedRow();
        //obtenemos los datos de la pregunta
        String enunciado = (String) modelo.getValueAt(posicion, 0);
        String respuestaCorrecta = (String) modelo.getValueAt(posicion, 1);
        String respuestaIncorrecta1 = (String) modelo.getValueAt(posicion, 2);
        String respuestaIncorrecta2 = (String) modelo.getValueAt(posicion, 3);
        String respuestaIncorrecta3 = (String) modelo.getValueAt(posicion, 4);
        //colocamos el enunciado de la pregunta
        txtEnunciado.setText(enunciado);
        //colocamos las respuestas de la pregunta
        txtRespuestaCorrecta.setText(respuestaCorrecta);
        txtRespuestaIncorrecta1.setText(respuestaIncorrecta1);
        txtRespuestaIncorrecta2.setText(respuestaIncorrecta2);
        txtRespuestaIncorrecta3.setText(respuestaIncorrecta3);
    }

    private void opcionCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaLogin frame = new VentanaLogin();
        frame.setVisible(true);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrarCategorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAdministrarCategorias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTable tablaInformacionPreguntas;
    private javax.swing.JPanel jpanelInformacionPreguntas;
    private javax.swing.JComboBox<String> listaCategorias;
    private javax.swing.JMenu menuAdministrador;
    private javax.swing.JMenu menuUsuario;
    private javax.swing.JMenuItem opcionCategorias;
    private javax.swing.JMenuItem opcionCerrarSesion;
    private javax.swing.JMenuItem opcionCuestionarios;
    private javax.swing.JMenuItem opcionModoJuego;
    private javax.swing.JMenuItem opcionPreguntas;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelContenido;
    private javax.swing.JPanel panelDatosCategoria;
    private javax.swing.JPanel panelPrinicipal;
    private javax.swing.JScrollPane tablaPreguntas;
    private javax.swing.JTextField txtDescripcionCategoria;
    private javax.swing.JTextField txtEnunciado;
    private javax.swing.JTextField txtNombreCategoria;
    private javax.swing.JTextField txtRespuestaCorrecta;
    private javax.swing.JTextField txtRespuestaIncorrecta1;
    private javax.swing.JTextField txtRespuestaIncorrecta2;
    private javax.swing.JTextField txtRespuestaIncorrecta3;
    // End of variables declaration
}
